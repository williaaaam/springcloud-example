spring:
  thymeleaf:
    cache: false
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html
  application:
    name: springcloud-sharding-jdbc
  redis:
    database: 0
    password: Monday01
    cluster:
      max-redirects: 3
      nodes:
        - 139.196.113.146:6380
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 10
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 2
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 5000ms
    timeout: 5000ms
  # shardingsphere配置
  shardingsphere:
    props:
      #SQL控制台打印（开发时配置）
      sql.show: true
    datasource:
      # 配置真实数据源
      names: ds0,ds1
      # 配置第一个数据源
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://139.196.113.146:3306/sharding_master?useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT
        username: william
        password: Monday01
        init-size: 5
        min-idle: 5
        maxActive: 20
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 30000
        filters: stat,wall,log4j2
        maxPoolPreparedStatementPerConnectionSize: 20
        poolPreparedStatements: true
        testOnReturn: false
        testWhileIdle: true
        testOnBorrow: false
        validationQuery: SELECT 1
        connectionProperties:
          druid:
            stat:
              mergeSql: true
              slowSqlMillis: 5000
      # 配置第二个数据源
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://139.196.113.146:3306/sharding_slave?useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT
        username: william
        password: Monday01
        init-size: 5
        min-idle: 5
        maxActive: 20
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 30000
        filters: stat,wall,log4j2
        maxPoolPreparedStatementPerConnectionSize: 20
        poolPreparedStatements: true
        testOnReturn: false
        testWhileIdle: true
        testOnBorrow: false
        validationQuery: SELECT 1
        connectionProperties:
          druid:
            stat:
              mergeSql: true
              slowSqlMillis: 5000
    sharding:
      # 配置t_order表规则
      binding-tables: t_order
      tables:
        t_order:
          actual-data-nodes: ds$->{0..1}.t_order_$->{0..2}
          # 配置t_order表分库策略（inline-基于行表达式的分片算法）
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: ds${user_id % 2}
          # 配置t_order表分表策略
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_$->{order_id % 3}
              #standard:
              #precise-algorithm-class-name: com.example.springcloud.sharding.jdbc.demo.OrderTablePreciseShardingAlgorithm
#      default-data-source-name: sharding_master
#      default-database-strategy:
#        standard:
#          sharding-column: order_id
#          precise-algorithm-class-name: com.example.springcloud.sharding.jdbc.demo.DatabasePreciseShardingAlgorithm
# 端口号
server:
  port: 10350

logging:
  level:
    root: info
  file:
    path:
  # 日志配置文件
  config: classpath:logback.xml


# eureka注册中心服务的配置
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://10.241.25.222:10002/eureka
