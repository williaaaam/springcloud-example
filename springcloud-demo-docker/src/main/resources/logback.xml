<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 管控台日志打印，发布生产需注释 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="utf-8"> <!-- encoder 可以指定字符集，对于中文输出有意义 -->
            <!-- %.-1level 只显示信息级别的首字母,%-5level 左对齐显示信息级别全称 -->
            <!-- 如需自定义关键字，用 %mdc{键名} 表示,程序中用MDC.put("键名","键值")设置，可动态设置 [%logger:%line]-->
            <Pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level] %c{40} %line --%mdc{client} [%X{TRACE_LOG_ID}] %msg%n
            </Pattern>
        </encoder>
        >
    </appender>

    <!-- 系统日志打印 -->
    <appender name="logInfoFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.home}/${project.artifactId}.log</File>
        <encoder>
            <Pattern>[%date] [%-5level] %c{40} %line --%mdc{client} [%X{TRACE_LOG_ID}] %msg%n</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.home}/${project.artifactId}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- 系统日志打印 -->
    <appender name="logErrorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
        </filter>
        <File>${log.home}/common-error.log</File>
        <encoder>
            <Pattern>[%date] [%-5level] %c{40} %line --%mdc{client} [%X{TRACE_LOG_ID}] %msg%n</Pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.home}/common-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>512MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- 异步输出 -->
    <appender name="asyncFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <includeCallerData>true</includeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="logInfoFile"/>
        <appender-ref ref="logErrorFile"/>
    </appender>

    <!--<logger name="com.baomidou.mybatisplus" level="DEBUG" />-->
    <!-- 外部jar包 日志级别设置 -->
    <!--<logger level="ERROR" name="com.ibatis" />-->
    <!--<logger level="ERROR" name="org.springframework"/>-->
    <!--&lt;!&ndash;<logger level="ERROR" name="java.sql"/>&ndash;&gt;-->
    <!--<logger level="ERROR" name="org.apache"/>-->
    <!--<logger level="ERROR" name="com.alibaba.dubbo"/>-->
    <!--<logger level="ERROR" name="org.I0Itec"/>-->
    <!--<logger level="ERROR" name="org.dozer"/>-->
    <!--&lt;!&ndash;<logger level="ERROR" name="org.mybatis"/>&ndash;&gt;-->
    <!--<logger level="ERROR" name="org.quartz"/>-->
    <!--<logger level="ERROR" name="com.zaxxer"/>-->
    <!--<logger level="ERROR" name="org.mybatis.spring"/>-->


    <logger level="DEBUG" name="com.baomidou.mybatisplus"/>
    <logger level="DEBUG" name="com.baomidou.mybatisplus"/>
    <logger level="DEBUG" name="com.baomidou.mybatisplus"/>
    <logger level="DEBUG" name="com.baomidou.mybatisplus"/>
    <logger level="DEBUG" name="com.baomidou.mybatisplus"/>
    <logger level="ERROR" name="org.apache.http"/>
    <logger level="ERROR" name="com.netflix"/>
    <logger level="ERROR" name="org.quartz"/>
    <logger level="ERROR" name="io.lettuce"/>
    <logger level="INFO" name="org.springframework"/>
    <logger level="ERROR" name="springfox.documentation"/>
    <logger level="INFO" name="com.alibaba"/>
    <logger level="ERROR" name="io.netty"/>

    <!-- 输出到文件，可定义更多的 Appender -->
    <root level="INFO" name="com.example.springcloud.demo.docker">
        <appender-ref ref="STDOUT"/>
    </root>

</configuration>